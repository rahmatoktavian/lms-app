{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport ReactNative from \"react-native-web/dist/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ENV } from \"../config\";\nexport var Color = _createClass(function Color() {\n  _classCallCheck(this, Color);\n});\n\n_defineProperty(Color, \"colorsCustom\", void 0);\n\n_defineProperty(Color, \"get\", function (key, isDark) {\n  var _ref, _ref2;\n\n  if (Color.colorsCustom) {\n    var _index = isDark && Color.colorsCustom.length === 2 ? 1 : 0;\n\n    return Color.colorsCustom[_index][key];\n  }\n\n  var color = ENV.COLORS[key];\n  var index = !isDark ? 0 : 1;\n  var i_a = Platform.select({\n    ios: (_ref = ReactNative === null || ReactNative === void 0 ? void 0 : ReactNative.PlatformColor(color.ios)) != null ? _ref : color.default[index],\n    android: (_ref2 = ReactNative === null || ReactNative === void 0 ? void 0 : ReactNative.PlatformColor(color.android[index])) != null ? _ref2 : color.default[index]\n  });\n  return i_a != null ? i_a : color.default[index];\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;OAAOA,W;;AACP,SAASC,GAAT;AAYA,WAAaC,KAAb;EAAA;AAAA;;gBAAaA,O;;gBAAAA,O,OAGe,UAACC,GAAD,EAAMC,MAAN,EAAiB;EAAA;;EACzC,IAAIF,KAAK,CAACG,YAAV,EAAwB;IACtB,IAAMC,MAAK,GAAGF,MAAM,IAAIF,KAAK,CAACG,YAANH,CAAmBK,MAAnBL,KAA8B,CAAxCE,GAA4C,CAA5CA,GAAgD,CAA9D;;IACA,OAAOF,KAAK,CAACG,YAANH,CAAmBI,MAAnBJ,EAA2BC,GAA3BD,CAAP;EACD;;EAED,IAAMM,KAAK,GAAGP,GAAG,CAACQ,MAAJR,CAAWE,GAAXF,CAAd;EACA,IAAMK,KAAK,GAAG,CAACF,MAAD,GAAU,CAAV,GAAc,CAA5B;EACA,IAAMM,GAAG,GAAGC,QAAQ,CAACC,MAATD,CAAmE;IAC7EE,GAAG,UAAEb,WAAW,SAAXA,eAAW,WAAXA,uBAAW,CAAEc,aAAbd,CAA2BQ,KAAK,CAACK,GAAjCb,CAAF,mBAA2CQ,KAAK,CAACO,OAANP,CAAcF,KAAdE,CAD+B;IAE7EQ,OAAO,WAAEhB,WAAW,SAAXA,eAAW,WAAXA,uBAAW,CAAEc,aAAbd,CAA2BQ,KAAK,CAACQ,OAANR,CAAcF,KAAdE,CAA3BR,CAAF,oBAAsDQ,KAAK,CAACO,OAANP,CAAcF,KAAdE;EAFgB,CAAnEG,CAAZ;EAKA,OAAOD,GAAP,WAAOA,GAAP,GAAcF,KAAK,CAACO,OAANP,CAAcF,KAAdE,CAAd","names":["ReactNative","ENV","Color","key","isDark","colorsCustom","index","length","color","COLORS","i_a","Platform","select","ios","PlatformColor","default","android"],"sources":["color.ts"],"sourcesContent":["import ReactNative, { Platform } from 'react-native';\nimport { ENV } from '../config';\n\ntype IGet = (key: keyof IColors, isDark: boolean) => string | undefined | ReactNative.OpaqueColorValue;\nexport type IColors = {\n  label: string;\n  card: string;\n  overlay: string;\n  success: string;\n  danger: string;\n  warning: string;\n};\n\nexport class Color {\n  public static colorsCustom?: [IColors] | [IColors, IColors];\n\n  public static get: IGet = (key, isDark) => {\n    if (Color.colorsCustom) {\n      const index = isDark && Color.colorsCustom.length === 2 ? 1 : 0;\n      return Color.colorsCustom[index]![key];\n    }\n\n    const color = ENV.COLORS[key];\n    const index = !isDark ? 0 : 1;\n    const i_a = Platform.select<string | undefined | ReactNative.OpaqueColorValue>({\n      ios: ReactNative?.PlatformColor(color.ios) ?? color.default[index],\n      android: ReactNative?.PlatformColor(color.android[index]) ?? color.default[index],\n    });\n\n    return i_a ?? color.default[index];\n  };\n}\n"]},"metadata":{},"sourceType":"module"}