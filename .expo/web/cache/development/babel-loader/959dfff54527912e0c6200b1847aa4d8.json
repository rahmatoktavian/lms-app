{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Appbar, Card, Text, Button, withTheme } from 'react-native-paper';\nimport { supabase } from \"../../config/supabase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction PreTestScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route,\n      theme = _ref.theme;\n  var _route$params = route.params,\n      id = _route$params.id,\n      soalPaketId = _route$params.soalPaketId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      soal = _useState2[0],\n      setSoal = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      soalCurr = _useState4[0],\n      setSoalCurr = _useState4[1];\n\n  useEffect(function () {\n    getSoal();\n    console.log('fef', soal);\n  }, []);\n\n  var getSoal = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$supabase$from$ = yield supabase.from('soal').select('id,label').eq('soal_paket_id', soalPaketId),\n          data = _yield$supabase$from$.data,\n          error = _yield$supabase$from$.error;\n\n      if (!error) {\n        console.log('fef', id);\n        soalList = [];\n        yield Promise.all(data.map(function () {\n          var _ref3 = _asyncToGenerator(function* (row, idx) {\n            soalList[idx] = {\n              idx: idx,\n              label: row.label\n            };\n\n            var _yield$supabase$from$2 = yield supabase.from('soal_jawban').select('id, label, is_right').eq('soal_id', row.id),\n                jawaban = _yield$supabase$from$2.data;\n\n            if (jawaban != null) {\n              var jawabanList = [];\n              jawaban.map(function (rowchild, childidx) {\n                jawabanList.push({\n                  idx: childidx,\n                  label: rowchild.label,\n                  is_right: rowchild.is_right\n                });\n              });\n              soalList[idx]['jawaban'] = jawabanList;\n            }\n          });\n\n          return function (_x, _x2) {\n            return _ref3.apply(this, arguments);\n          };\n        }()));\n        setSoal(soalList);\n      }\n    });\n\n    return function getSoal() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Appbar.Header, {\n      children: [_jsx(Appbar.BackAction, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        }\n      }), _jsx(Appbar.Content, {\n        title: \"Akademi Bank Sampah\"\n      })]\n    }), _jsx(ScrollView, {\n      children: _jsx(Card, {\n        style: {\n          margin: 10\n        },\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Text, {\n            variant: \"titleMedium\",\n            children: \"Kerjakan Soal\"\n          }), _jsx(Text, {\n            children: \"Soal terdiri 50 Pilihan Ganda, kerjakan seluruh soal dengan teliti.\"\n          })]\n        })\n      })\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: function onPress() {\n        return navigation.navigate('UjianScreen', {\n          id: id,\n          soalPaketId: soalPaketId\n        });\n      },\n      style: {\n        margin: 10\n      },\n      children: \"Mulai Ujian\"\n    })]\n  });\n}\n\nexport default withTheme(PreTestScreen);","map":{"version":3,"names":["useEffect","useState","Appbar","Card","Text","Button","withTheme","supabase","PreTestScreen","navigation","route","theme","params","id","soalPaketId","soal","setSoal","soalCurr","setSoalCurr","getSoal","console","log","from","select","eq","data","error","soalList","Promise","all","map","row","idx","label","jawaban","jawabanList","rowchild","childidx","push","is_right","goBack","margin","navigate"],"sources":["/home/rahmatrians/Documents/lms-app/lms-app/app/screen/peserta/PreTestScreen.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Appbar, Card, Text, Button, withTheme } from 'react-native-paper';\nimport { supabase } from '../../config/supabase';\n\nfunction PreTestScreen({ navigation, route, theme }) {\n\tconst { id, soalPaketId } = route.params;\n\tconst [soal, setSoal] = useState([]);\n\tconst [soalCurr, setSoalCurr] = useState(0)\n\n\tuseEffect(() => {\n\t\tgetSoal();\n\t\tconsole.log('fef', soal);\n\t}, [])\n\n\n\tconst getSoal = async () => {\n\t\tconst { data, error } = await supabase\n\t\t\t.from('soal')\n\t\t\t.select('id,label')\n\t\t\t.eq('soal_paket_id', soalPaketId);\n\n\t\tif (!error) {\n\t\t\tconsole.log('fef', id);\n\t\t\tsoalList = [];\n\t\t\tawait Promise.all(\n\t\t\t\tdata.map(async (row, idx) => {\n\t\t\t\t\tsoalList[idx] = { idx: idx, label: row.label }\n\n\t\t\t\t\tconst { data: jawaban } = await supabase\n\t\t\t\t\t\t.from('soal_jawban')\n\t\t\t\t\t\t.select('id, label, is_right')\n\t\t\t\t\t\t.eq('soal_id', row.id)\n\n\t\t\t\t\tif (jawaban != null) {\n\t\t\t\t\t\tlet jawabanList = [];\n\t\t\t\t\t\tjawaban.map((rowchild, childidx) => {\n\t\t\t\t\t\t\tjawabanList.push({ idx: childidx, label: rowchild.label, is_right: rowchild.is_right })\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsoalList[idx]['jawaban'] = jawabanList;\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t)\n\t\t\tsetSoal(soalList);\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Appbar.Header>\n\t\t\t\t<Appbar.BackAction onPress={() => navigation.goBack()} />\n\t\t\t\t<Appbar.Content title=\"Akademi Bank Sampah\" />\n\t\t\t</Appbar.Header>\n\n\t\t\t<ScrollView>\n\t\t\t\t<Card style={{ margin: 10 }}>\n\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t<Text variant=\"titleMedium\">Kerjakan Soal</Text>\n\t\t\t\t\t\t<Text>Soal terdiri 50 Pilihan Ganda, kerjakan seluruh soal dengan teliti.</Text>\n\t\t\t\t\t</Card.Content>\n\t\t\t\t</Card>\n\t\t\t</ScrollView>\n\n\t\t\t<Button mode=\"contained\" onPress={() => navigation.navigate('UjianScreen', { id: id, soalPaketId: soalPaketId })} style={{ margin: 10 }}>Mulai Ujian</Button>\n\t\t</>\n\t);\n}\n\nexport default withTheme(PreTestScreen);"],"mappings":"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"},"metadata":{},"sourceType":"module"}