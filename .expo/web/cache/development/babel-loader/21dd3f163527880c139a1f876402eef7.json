{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { CommonActions } from '@react-navigation/routers';\nexport var NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nexport default function createNavigationContainerRef() {\n  var methods = [].concat(_toConsumableArray(Object.keys(CommonActions)), ['addListener', 'removeListener', 'resetRoot', 'dispatch', 'isFocused', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions']);\n  var listeners = {};\n\n  var removeListener = function removeListener(event, callback) {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter(function (cb) {\n        return cb !== callback;\n      });\n    }\n  };\n\n  var current = null;\n\n  var ref = _objectSpread({\n    get current() {\n      return current;\n    },\n\n    set current(value) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              event = _ref2[0],\n              callbacks = _ref2[1];\n\n          callbacks.forEach(function (callback) {\n            value.addListener(event, callback);\n          });\n        });\n      }\n    },\n\n    isReady: function isReady() {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    }\n  }, methods.reduce(function (acc, name) {\n    acc[name] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (current == null) {\n        switch (name) {\n          case 'addListener':\n            {\n              var event = args[0],\n                  callback = args[1];\n              listeners[event] = listeners[event] || [];\n              listeners[event].push(callback);\n              return function () {\n                return removeListener(event, callback);\n              };\n            }\n\n          case 'removeListener':\n            {\n              var _event = args[0],\n                  _callback = args[1];\n              removeListener(_event, _callback);\n              break;\n            }\n\n          default:\n            console.error(NOT_INITIALIZED_ERROR);\n        }\n      } else {\n        var _current;\n\n        return (_current = current)[name].apply(_current, args);\n      }\n    };\n\n    return acc;\n  }, {}));\n\n  return ref;\n}","map":{"version":3,"mappings":";;;;;;;;AAAA,SAASA,aAAT,QAA8B,2BAA9B;AAQA,OAAO,IAAMC,qBAAqB,GAChC,+QADK;AAGP,eAAe,SAASC,4BAAT,GAEmC;EAChD,IAAMC,OAAO,gCACRC,MAAM,CAACC,IAAPD,CAAYJ,aAAZI,CADQ,IAEX,aAFW,EAGX,gBAHW,EAIX,WAJW,EAKX,UALW,EAMX,WANW,EAOX,WAPW,EAQX,cARW,EASX,UATW,EAUX,WAVW,EAWX,iBAXW,EAYX,mBAZW,EAAb;EAeA,IAAME,SAAuD,GAAG,EAAhE;;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CACrBC,KADqB,EAErBC,QAFqB,EAGlB;IACH,IAAIH,SAAS,CAACE,KAAD,CAAb,EAAsB;MACpBF,SAAS,CAACE,KAAD,CAATF,GAAmBA,SAAS,CAACE,KAAD,CAATF,CAAiBI,MAAjBJ,CAAyBK,YAAE;QAAA,OAAKA,EAAE,KAAKF,QAAZ;MAAA,CAA3BH,CAAnBA;IACF;EACD,CAPD;;EASA,IAAIM,OAAiD,GAAG,IAAxD;;EAEA,IAAMC,GAAiD;IACrD,IAAID,OAAJ,GAAc;MACZ,OAAOA,OAAP;IACD,CAHoD;;IAIrD,IAAIA,OAAJ,CAAYE,KAAZ,EAA6D;MAC3DF,OAAO,GAAGE,KAAVF;;MAEA,IAAIE,KAAK,IAAI,IAAb,EAAmB;QACjBV,MAAM,CAACW,OAAPX,CAAeE,SAAfF,EAA0BY,OAA1BZ,CAAkC,gBAAwB;UAAA,2BAALa,IAAK;UAAA,IAAtBT,KAAsB;UAAA,IAAfU,SAAe;;UACxDA,SAAS,CAACF,OAAVE,CAAmBT,kBAAQ,EAAK;YAC9BK,KAAK,CAACK,WAANL,CACEN,KADFM,EAEEL,QAFFK;UAID,CALDI;QAMD,CAPDd;MAQF;IACD,CAjBoD;;IAkBrDgB,OAAO,EAAE,mBAAM;MACb,IAAIR,OAAO,IAAI,IAAf,EAAqB;QACnB,OAAO,KAAP;MACF;;MAEA,OAAOA,OAAO,CAACQ,OAARR,EAAP;IACD;EAxBoD,GAyBlDT,OAAO,CAACkB,MAARlB,CAAoB,UAACmB,GAAD,EAAMC,IAAN,EAAe;IACpCD,GAAG,CAACC,IAAD,CAAHD,GAAY,YAAoB;MAAA,kCAAhBE,IAAI,kBAAY,EAAZC,QAAY,EAAZA,WAAY,EAAZA,MAAY,EAAZ;QAAJD,IAAI,MAAJA,GAAIE,eAAJF;MAAI;;MAClB,IAAIZ,OAAO,IAAI,IAAf,EAAqB;QACnB,QAAQW,IAAR;UACE,KAAK,aAAL;YAAoB;cAClB,IAAOf,KAAP,GAA0BgB,IAA1B;cAAA,IAAcf,QAAd,GAA0Be,IAA1B;cAEAlB,SAAS,CAACE,KAAD,CAATF,GAAmBA,SAAS,CAACE,KAAD,CAATF,IAAoB,EAAvCA;cACAA,SAAS,CAACE,KAAD,CAATF,CAAiBqB,IAAjBrB,CAAsBG,QAAtBH;cAEA,OAAO;gBAAA,OAAMC,cAAc,CAACC,KAAD,EAAQC,QAAR,CAApB;cAAA,CAAP;YACF;;UACA,KAAK,gBAAL;YAAuB;cACrB,IAAOD,MAAP,GAA0BgB,IAA1B;cAAA,IAAcf,SAAd,GAA0Be,IAA1B;cAEAjB,cAAc,CAACC,MAAD,EAAQC,SAAR,CAAdF;cACA;YACF;;UACA;YACEqB,OAAO,CAACC,KAARD,CAAc3B,qBAAd2B;QAhBJ;MAkBD,CAnBD,MAmBO;QAAA;;QAEL,OAAOhB,mBAAO,EAACW,IAAD,CAAPX,iBAAiBY,IAAjBZ,CAAP;MACF;IACD,CAxBDU;;IAyBA,OAAOA,GAAP;EACD,CA3BEnB,EA2BA,EA3BAA,CAzBkD,CAAvD;;EAuDA,OAAOU,GAAP;AACF","names":["CommonActions","NOT_INITIALIZED_ERROR","createNavigationContainerRef","methods","Object","keys","listeners","removeListener","event","callback","filter","cb","current","ref","value","entries","forEach","_ref","callbacks","addListener","isReady","reduce","acc","name","args","_key","arguments","push","console","error"],"sourceRoot":"../../src","sources":["createNavigationContainerRef.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}