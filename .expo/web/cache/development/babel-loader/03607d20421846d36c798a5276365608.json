{"ast":null,"code":"import { getActionFromState, getStateFromPath, NavigationContainerRefContext } from '@react-navigation/core';\nimport * as React from 'react';\nimport LinkingContext from \"./LinkingContext\";\nexport default function useLinkTo() {\n  var navigation = React.useContext(NavigationContainerRefContext);\n  var linking = React.useContext(LinkingContext);\n  var linkTo = React.useCallback(function (to) {\n    if (navigation === undefined) {\n      throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");\n    }\n\n    if (typeof to !== 'string') {\n      navigation.navigate(to.screen, to.params);\n      return;\n    }\n\n    if (!to.startsWith('/')) {\n      throw new Error(\"The path must start with '/' (\" + to + \").\");\n    }\n\n    var options = linking.options;\n    var state = options !== null && options !== void 0 && options.getStateFromPath ? options.getStateFromPath(to, options.config) : getStateFromPath(to, options === null || options === void 0 ? void 0 : options.config);\n\n    if (state) {\n      var action = getActionFromState(state, options === null || options === void 0 ? void 0 : options.config);\n\n      if (action !== undefined) {\n        navigation.dispatch(action);\n      } else {\n        navigation.reset(state);\n      }\n    } else {\n      throw new Error('Failed to parse the path to a navigation state.');\n    }\n  }, [linking, navigation]);\n  return linkTo;\n}","map":{"version":3,"mappings":"AAAA,SACEA,kBADF,EAEEC,gBAFF,EAGEC,6BAHF,QAIO,wBAJP;AAKA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,cAAP;AAiBA,eAAe,SAASC,SAAT,GAEX;EACF,IAAMC,UAAU,GAAGH,KAAK,CAACI,UAANJ,CAAiBD,6BAAjBC,CAAnB;EACA,IAAMK,OAAO,GAAGL,KAAK,CAACI,UAANJ,CAAiBC,cAAjBD,CAAhB;EAEA,IAAMM,MAAM,GAAGN,KAAK,CAACO,WAANP,CACZQ,YAAiB,EAAK;IACrB,IAAIL,UAAU,KAAKM,SAAnB,EAA8B;MAC5B,MAAM,IAAIC,KAAJ,CACJ,kFADI,CAAN;IAGF;;IAEA,IAAI,OAAOF,EAAP,KAAc,QAAlB,EAA4B;MAE1BL,UAAU,CAACQ,QAAXR,CAAoBK,EAAE,CAACI,MAAvBT,EAA+BK,EAAE,CAACK,MAAlCV;MACA;IACF;;IAEA,IAAI,CAACK,EAAE,CAACM,UAAHN,CAAc,GAAdA,CAAL,EAAyB;MACvB,MAAM,IAAIE,KAAJ,oCAA2CF,EAA3C,QAAN;IACF;;IAEA,IAAQO,OAAR,GAAoBV,OAApB,CAAQU,OAAR;IAEA,IAAMC,KAAK,GAAGD,OAAO,SAAPA,WAAO,WAAPA,WAAO,CAAEjB,gBAATiB,GACVA,OAAO,CAACjB,gBAARiB,CAAyBP,EAAzBO,EAA6BA,OAAO,CAACE,MAArCF,CADUA,GAEVjB,gBAAgB,CAACU,EAAD,EAAKO,OAAO,SAAPA,WAAO,WAAPA,GAAO,MAAPA,UAAO,CAAEE,MAAd,CAFpB;;IAIA,IAAID,KAAJ,EAAW;MACT,IAAME,MAAM,GAAGrB,kBAAkB,CAACmB,KAAD,EAAQD,OAAO,SAAPA,WAAO,WAAPA,GAAO,MAAPA,UAAO,CAAEE,MAAjB,CAAjC;;MAEA,IAAIC,MAAM,KAAKT,SAAf,EAA0B;QACxBN,UAAU,CAACgB,QAAXhB,CAAoBe,MAApBf;MACD,CAFD,MAEO;QACLA,UAAU,CAACiB,KAAXjB,CAAiBa,KAAjBb;MACF;IACD,CARD,MAQO;MACL,MAAM,IAAIO,KAAJ,CAAU,iDAAV,CAAN;IACF;EACD,CAnCYV,EAoCb,CAACK,OAAD,EAAUF,UAAV,CApCaH,CAAf;EAuCA,OAAOM,MAAP;AACF","names":["getActionFromState","getStateFromPath","NavigationContainerRefContext","React","LinkingContext","useLinkTo","navigation","useContext","linking","linkTo","useCallback","to","undefined","Error","navigate","screen","params","startsWith","options","state","config","action","dispatch","reset"],"sourceRoot":"../../src","sources":["useLinkTo.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}