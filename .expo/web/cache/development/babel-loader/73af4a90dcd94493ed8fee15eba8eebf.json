{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { withTheme, Appbar, TextInput, HelperText, Button } from 'react-native-paper';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Dialog, ALERT_TYPE } from 'react-native-alert-notification';\nimport { supabase } from \"../../config/supabase\";\nimport Loader from \"../../comp/Loader\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation,\n      theme = _ref.theme;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hidePassword = _useState4[0],\n      setHidePassword = _useState4[1];\n\n  var onLogin = function () {\n    var _ref2 = _asyncToGenerator(function* (values) {\n      setLoading(true);\n\n      var _yield$supabase$auth$ = yield supabase.auth.signInWithPassword({\n        email: values.email,\n        password: values.password\n      }),\n          error = _yield$supabase$auth$.error;\n\n      if (error) {\n        Dialog.show({\n          type: ALERT_TYPE.WARNING,\n          title: error.message,\n          button: 'Close'\n        });\n      }\n\n      setLoading(false);\n    });\n\n    return function onLogin(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Appbar.Header, {\n      children: _jsx(Appbar.Content, {\n        title: \"LMS Login\"\n      })\n    }), _jsx(Loader, {\n      loading: loading\n    }), _jsx(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      enableReinitialize: true,\n      validationSchema: yup.object().shape({\n        email: yup.string().email().required(),\n        password: yup.string().min(6).required()\n      }),\n      onSubmit: function onSubmit(values) {\n        return onLogin(values);\n      },\n      children: function children(_ref3) {\n        var handleSubmit = _ref3.handleSubmit,\n            handleBlur = _ref3.handleBlur,\n            handleChange = _ref3.handleChange,\n            values = _ref3.values,\n            errors = _ref3.errors,\n            touched = _ref3.touched,\n            isValid = _ref3.isValid;\n        return _jsxs(_Fragment, {\n          children: [_jsx(TextInput, {\n            label: \"Email\",\n            value: values.email,\n            onChangeText: handleChange('email'),\n            onBlur: handleBlur('email'),\n            error: errors.email ? true : false,\n            style: {\n              margin: 10\n            }\n          }), errors.email && _jsx(HelperText, {\n            type: \"error\",\n            children: errors.email\n          }), _jsx(TextInput, {\n            label: \"Password\",\n            value: values.password,\n            onChangeText: handleChange('password'),\n            onBlur: handleBlur('password'),\n            secureTextEntry: hidePassword,\n            error: errors.password ? true : false,\n            right: _jsx(TextInput.Icon, {\n              icon: hidePassword ? 'eye' : 'eye-off',\n              onPress: function onPress() {\n                return setHidePassword(!hidePassword);\n              }\n            }),\n            style: {\n              margin: 10\n            }\n          }), errors.password && _jsx(HelperText, {\n            type: \"error\",\n            children: errors.password\n          }), _jsx(Button, {\n            mode: \"contained\",\n            disabled: !isValid,\n            onPress: handleSubmit,\n            style: {\n              margin: 10\n            },\n            children: \"Login\"\n          })]\n        });\n      }\n    })]\n  });\n}\n\nexport default withTheme(HomeScreen);","map":{"version":3,"names":["React","useState","withTheme","Appbar","TextInput","HelperText","Button","Formik","yup","Dialog","ALERT_TYPE","supabase","Loader","HomeScreen","navigation","theme","loading","setLoading","hidePassword","setHidePassword","onLogin","values","auth","signInWithPassword","email","password","error","show","type","WARNING","title","message","button","object","shape","string","required","min","handleSubmit","handleBlur","handleChange","errors","touched","isValid","margin"],"sources":["/home/rahmatrians/Documents/lms-app/lms-app/app/screen/auth/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { withTheme, Appbar, TextInput, HelperText, Button } from 'react-native-paper';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Dialog, ALERT_TYPE } from 'react-native-alert-notification';\n\nimport { supabase } from '../../config/supabase';\nimport Loader from '../../comp/Loader';\n\nfunction HomeScreen({ navigation, theme }) {\n\tconst [loading, setLoading] = useState(false);\n\tconst [hidePassword, setHidePassword] = useState(true);\n\n\tconst onLogin = async(values) => {\n\t\tsetLoading(true)\n\t\tconst { error } = await supabase.auth.signInWithPassword({\n\t\t\temail: values.email,\n\t\t\tpassword: values.password,\n\t\t})\n\t\t\n\t\tif (error) {\n\t\t\tDialog.show({\n\t\t\t\ttype: ALERT_TYPE.WARNING,\n\t\t\t\ttitle: error.message,\n\t\t\t\tbutton: 'Close',\n\t\t\t})\n\t\t}\n\t\tsetLoading(false)\n\t}\n\t\n\treturn (\n\t\t<>\n\t\t\t<Appbar.Header>\n\t\t\t\t<Appbar.Content title=\"LMS Login\" />\n\t\t\t</Appbar.Header>\n\t\t\t\n\t\t\t<Loader loading={loading} />\n\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\temail: '', \n\t\t\t\t\tpassword: '' \n\t\t\t\t}}\n\t\t\t\tenableReinitialize\n\t\t\t\tvalidationSchema={yup.object().shape({\n\t\t\t\temail: yup\n\t\t\t\t\t.string()\n\t\t\t\t\t.email()\n\t\t\t\t\t.required(),\n\t\t\t\tpassword: yup\n\t\t\t\t\t.string()\n\t\t\t\t\t.min(6)\n\t\t\t\t\t.required(),\n\t\t\t\t})}\n\t\t\t\tonSubmit={values => onLogin(values)}\n\t\t\t>\n\t\t\t{({ handleSubmit, handleBlur, handleChange, values, errors, touched, isValid }) => (\n\t\t\t<>\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\tvalue={values.email}\n\t\t\t\t\tonChangeText={handleChange('email')}\n\t\t\t\t\tonBlur={handleBlur('email')}\n\t\t\t\t\terror={errors.email ? true : false}\n\t\t\t\t\tstyle={{margin:10}}\n\t\t\t\t/>\n\t\t\t\t{errors.email && <HelperText type=\"error\">{errors.email}</HelperText>}\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\tvalue={values.password}\n\t\t\t\t\tonChangeText={handleChange('password')}\n\t\t\t\t\tonBlur={handleBlur('password')}\n\t\t\t\t\tsecureTextEntry={hidePassword}\n\t\t\t\t\terror={errors.password ? true : false}\n\t\t\t\t\tright={<TextInput.Icon icon={hidePassword ? 'eye' : 'eye-off'} onPress={() => setHidePassword(!hidePassword)} />}\n\t\t\t\t\tstyle={{margin:10}}\n\t\t\t\t/>\n\t\t\t\t{errors.password && <HelperText type=\"error\">{errors.password}</HelperText>}\n\t\t\t\t<Button mode=\"contained\" disabled={!isValid} onPress={handleSubmit} style={{margin:10}}>\n\t\t\t\t\tLogin\n\t\t\t\t</Button>\n\t\t\t</>\n\t\t\t)}\n\t\t\t</Formik>\n\t\t</>\n\t);\n}\n\nexport default withTheme(HomeScreen)"],"mappings":"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"},"metadata":{},"sourceType":"module"}