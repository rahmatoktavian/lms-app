{"ast":null,"code":"import * as React from 'react';\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport NavigationStateContext from \"./NavigationStateContext\";\nexport default function useOptionsGetters(_ref) {\n  var key = _ref.key,\n      options = _ref.options,\n      navigation = _ref.navigation;\n  var optionsRef = React.useRef(options);\n  var optionsGettersFromChildRef = React.useRef({});\n\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n      onOptionsChange = _React$useContext.onOptionsChange;\n\n  var _React$useContext2 = React.useContext(NavigationStateContext),\n      parentAddOptionsGetter = _React$useContext2.addOptionsGetter;\n\n  var optionsChangeListener = React.useCallback(function () {\n    var _ref2;\n\n    var isFocused = (_ref2 = navigation === null || navigation === void 0 ? void 0 : navigation.isFocused()) != null ? _ref2 : true;\n    var hasChildren = Object.keys(optionsGettersFromChildRef.current).length;\n\n    if (isFocused && !hasChildren) {\n      var _optionsRef$current;\n\n      onOptionsChange((_optionsRef$current = optionsRef.current) != null ? _optionsRef$current : {});\n    }\n  }, [navigation, onOptionsChange]);\n  React.useEffect(function () {\n    optionsRef.current = options;\n    optionsChangeListener();\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('focus', optionsChangeListener);\n  }, [navigation, options, optionsChangeListener]);\n  var getOptionsFromListener = React.useCallback(function () {\n    for (var _key in optionsGettersFromChildRef.current) {\n      if (optionsGettersFromChildRef.current.hasOwnProperty(_key)) {\n        var _optionsGettersFromCh, _optionsGettersFromCh2;\n\n        var result = (_optionsGettersFromCh = (_optionsGettersFromCh2 = optionsGettersFromChildRef.current)[_key]) === null || _optionsGettersFromCh === void 0 ? void 0 : _optionsGettersFromCh.call(_optionsGettersFromCh2);\n\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }, []);\n  var getCurrentOptions = React.useCallback(function () {\n    var _ref3;\n\n    var isFocused = (_ref3 = navigation === null || navigation === void 0 ? void 0 : navigation.isFocused()) != null ? _ref3 : true;\n\n    if (!isFocused) {\n      return null;\n    }\n\n    var optionsFromListener = getOptionsFromListener();\n\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n\n    return optionsRef.current;\n  }, [navigation, getOptionsFromListener]);\n  React.useEffect(function () {\n    return parentAddOptionsGetter === null || parentAddOptionsGetter === void 0 ? void 0 : parentAddOptionsGetter(key, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n  var addOptionsGetter = React.useCallback(function (key, getter) {\n    optionsGettersFromChildRef.current[key] = getter;\n    optionsChangeListener();\n    return function () {\n      delete optionsGettersFromChildRef.current[key];\n      optionsChangeListener();\n    };\n  }, [optionsChangeListener]);\n  return {\n    addOptionsGetter: addOptionsGetter,\n    getCurrentOptions: getCurrentOptions\n  };\n}","map":{"version":3,"mappings":"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","names":["React","NavigationBuilderContext","NavigationStateContext","useOptionsGetters","_ref","key","options","navigation","optionsRef","useRef","optionsGettersFromChildRef","useContext","onOptionsChange","parentAddOptionsGetter","addOptionsGetter","optionsChangeListener","useCallback","isFocused","hasChildren","Object","keys","current","length","useEffect","addListener","getOptionsFromListener","hasOwnProperty","result","_optionsGettersFromCh","getCurrentOptions","optionsFromListener","getter"],"sourceRoot":"../../src","sources":["useOptionsGetters.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}