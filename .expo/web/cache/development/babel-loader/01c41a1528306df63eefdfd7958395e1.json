{"ast":null,"code":"import 'expo/build/Expo.fx';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport default function registerRootComponent(component) {\n  if (process.env.NODE_ENV === 'production') {\n    AppRegistry.registerComponent('main', function () {\n      return component;\n    });\n  } else {\n    var _require = require(\"./withDevTools\"),\n        withDevTools = _require.withDevTools;\n\n    AppRegistry.registerComponent('main', function () {\n      return withDevTools(component);\n    });\n  }\n\n  if (Platform.OS === 'web') {\n    var _document$getElementB;\n\n    var rootTag = (_document$getElementB = document.getElementById('root')) != null ? _document$getElementB : document.getElementById('main');\n    AppRegistry.runApplication('main', {\n      rootTag: rootTag\n    });\n  }\n}","map":{"version":3,"mappings":"AAAA,OAAO,oBAAP;;;AAgBA,eAAc,SAAUA,qBAAV,CACZC,SADY,EACqB;EAEjC,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzCC,WAAW,CAACC,iBAAZ,CAA8B,MAA9B,EAAsC;MAAA,OAAML,SAAN;IAAA,CAAtC;EACD,CAFD,MAEO;IACL,eAAyBM,OAAO,kBAAhC;IAAA,IAAQC,YAAR,YAAQA,YAAR;;IACAH,WAAW,CAACC,iBAAZ,CAA8B,MAA9B,EAAsC;MAAA,OAAME,YAAY,CAACP,SAAD,CAAlB;IAAA,CAAtC;EACD;;EAED,IAAIQ,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;IAAA;;IACzB,IAAMC,OAAO,4BAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAH,oCAAsCD,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAnD;IACAR,WAAW,CAACS,cAAZ,CAA2B,MAA3B,EAAmC;MAAEH,OAAO,EAAPA;IAAF,CAAnC;EACD;AACF","names":["registerRootComponent","component","process","env","NODE_ENV","AppRegistry","registerComponent","require","withDevTools","Platform","OS","rootTag","document","getElementById","runApplication"],"sourceRoot":"","sources":["../../src/launch/registerRootComponent.tsx"],"sourcesContent":["import 'expo/build/Expo.fx';\n\nimport * as React from 'react';\nimport { AppRegistry, Platform } from 'react-native';\n\ntype InitialProps = {\n  exp: {\n    notification?: any;\n    manifestString?: string;\n    [key: string]: any;\n  };\n  shell?: boolean;\n  shellManifestUrl?: string;\n  [key: string]: any;\n};\n\nexport default function registerRootComponent<P extends InitialProps>(\n  component: React.ComponentType<P>\n): void {\n  if (process.env.NODE_ENV === 'production') {\n    AppRegistry.registerComponent('main', () => component);\n  } else {\n    const { withDevTools } = require('./withDevTools') as typeof import('./withDevTools');\n    AppRegistry.registerComponent('main', () => withDevTools(component));\n  }\n\n  if (Platform.OS === 'web') {\n    const rootTag = document.getElementById('root') ?? document.getElementById('main');\n    AppRegistry.runApplication('main', { rootTag });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}