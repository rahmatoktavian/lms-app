{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { CommonActions } from '@react-navigation/routers';\nimport * as React from 'react';\nimport NavigationContext from \"./NavigationContext\";\nimport { PrivateValueStore } from \"./types\";\nimport UnhandledActionContext from \"./UnhandledActionContext\";\nPrivateValueStore;\nexport default function useNavigationHelpers(_ref) {\n  var navigatorId = _ref.id,\n      onAction = _ref.onAction,\n      getState = _ref.getState,\n      emitter = _ref.emitter,\n      router = _ref.router;\n  var onUnhandledAction = React.useContext(UnhandledActionContext);\n  var parentNavigationHelpers = React.useContext(NavigationContext);\n  return React.useMemo(function () {\n    var dispatch = function dispatch(op) {\n      var action = typeof op === 'function' ? op(getState()) : op;\n      var handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction === null || onUnhandledAction === void 0 ? void 0 : onUnhandledAction(action);\n      }\n    };\n\n    var actions = _objectSpread(_objectSpread({}, router.actionCreators), CommonActions);\n\n    var helpers = Object.keys(actions).reduce(function (acc, name) {\n      acc[name] = function () {\n        return dispatch(actions[name].apply(actions, arguments));\n      };\n\n      return acc;\n    }, {});\n\n    var navigationHelpers = _objectSpread(_objectSpread(_objectSpread({}, parentNavigationHelpers), helpers), {}, {\n      dispatch: dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers ? parentNavigationHelpers.isFocused : function () {\n        return true;\n      },\n      canGoBack: function canGoBack() {\n        var state = getState();\n        return router.getStateForAction(state, CommonActions.goBack(), {\n          routeNames: state.routeNames,\n          routeParamList: {},\n          routeGetIdList: {}\n        }) !== null || (parentNavigationHelpers === null || parentNavigationHelpers === void 0 ? void 0 : parentNavigationHelpers.canGoBack()) || false;\n      },\n      getId: function getId() {\n        return navigatorId;\n      },\n      getParent: function getParent(id) {\n        if (id !== undefined) {\n          var current = navigationHelpers;\n\n          while (current && id !== current.getId()) {\n            current = current.getParent();\n          }\n\n          return current;\n        }\n\n        return parentNavigationHelpers;\n      },\n      getState: getState\n    });\n\n    return navigationHelpers;\n  }, [navigatorId, emitter.emit, getState, onAction, onUnhandledAction, parentNavigationHelpers, router]);\n}","map":{"version":3,"mappings":"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","names":["CommonActions","React","NavigationContext","PrivateValueStore","UnhandledActionContext","useNavigationHelpers","_ref","navigatorId","id","onAction","getState","emitter","router","onUnhandledAction","useContext","parentNavigationHelpers","useMemo","dispatch","op","action","handled","actions","actionCreators","helpers","Object","keys","reduce","acc","name","arguments","navigationHelpers","emit","isFocused","canGoBack","state","getStateForAction","goBack","routeNames","routeParamList","routeGetIdList","getId","getParent","undefined","current"],"sourceRoot":"../../src","sources":["useNavigationHelpers.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}