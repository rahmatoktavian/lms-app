{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useEffect, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Appbar, Card, Text, Button, withTheme } from 'react-native-paper';\nimport { supabase } from \"../../config/supabase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction PreTestScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route,\n      theme = _ref.theme;\n  var _route$params = route.params,\n      id = _route$params.id,\n      soalPaketId = _route$params.soalPaketId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      soal = _useState2[0],\n      setSoal = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      soalCurr = _useState4[0],\n      setSoalCurr = _useState4[1];\n\n  useEffect(function () {\n    getSoal();\n  }, []);\n\n  var getSoal = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var _yield$supabase$from$ = yield supabase.from('soal').select('id,label').eq('soal_paket_id', soalPaketId),\n          data = _yield$supabase$from$.data,\n          error = _yield$supabase$from$.error;\n\n      if (!error) {\n        var soalList = [];\n        yield Promise.all(data.map(function () {\n          var _ref3 = _asyncToGenerator(function* (row, idx) {\n            var _yield$supabase$from$2 = yield supabase.from('soal_jawaban').select('id, label, is_right').eq('soal_id', row.id),\n                jawaban = _yield$supabase$from$2.data,\n                jawabanErr = _yield$supabase$from$2.error;\n\n            if (!jawabanErr) {\n              var jawabanList = [];\n              jawaban.map(function (rowchild, childidx) {\n                jawabanList.push({\n                  idx: childidx,\n                  label: rowchild.label,\n                  is_right: rowchild.is_right\n                });\n              });\n              soalList[idx] = {\n                idx: idx,\n                label: row.label,\n                'jawaban': _objectSpread({}, jawabanList)\n              };\n            }\n          });\n\n          return function (_x, _x2) {\n            return _ref3.apply(this, arguments);\n          };\n        }()));\n        setSoal(soalList);\n      }\n    });\n\n    return function getSoal() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var cekSoal = function cekSoal() {\n    console.log('ini soal', soal);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Appbar.Header, {\n      children: [_jsx(Appbar.BackAction, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        }\n      }), _jsx(Appbar.Content, {\n        title: \"Akademi Bank Sampah\"\n      })]\n    }), _jsx(ScrollView, {\n      children: _jsx(Card, {\n        style: {\n          margin: 10\n        },\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Text, {\n            variant: \"titleMedium\",\n            children: \"Kerjakan Soal\"\n          }), _jsx(Text, {\n            children: \"Soal terdiri 50 Pilihan Ganda, kerjakan seluruh soal dengan teliti.\"\n          })]\n        })\n      })\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: function onPress() {\n        return cekSoal();\n      },\n      style: {\n        margin: 10\n      },\n      children: \"Mulai Ujian\"\n    })]\n  });\n}\n\nexport default withTheme(PreTestScreen);","map":{"version":3,"names":["useEffect","useState","Appbar","Card","Text","Button","withTheme","supabase","PreTestScreen","navigation","route","theme","params","id","soalPaketId","soal","setSoal","soalCurr","setSoalCurr","getSoal","from","select","eq","data","error","soalList","Promise","all","map","row","idx","jawaban","jawabanErr","jawabanList","rowchild","childidx","push","label","is_right","cekSoal","console","log","goBack","margin"],"sources":["/home/rahmatrians/Documents/lms-app/lms-app/app/screen/peserta/PreTestScreen.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ScrollView } from 'react-native';\nimport { Appbar, Card, Text, Button, withTheme } from 'react-native-paper';\nimport { supabase } from '../../config/supabase';\n\nfunction PreTestScreen({ navigation, route, theme }) {\n\tconst { id, soalPaketId } = route.params;\n\tconst [soal, setSoal] = useState([]);\n\tconst [soalCurr, setSoalCurr] = useState(0)\n\n\tuseEffect(() => {\n\t\tgetSoal();\n\t}, [])\n\n\n\tconst getSoal = async () => {\n\t\tconst { data, error } = await supabase\n\t\t\t.from('soal')\n\t\t\t.select('id,label')\n\t\t\t.eq('soal_paket_id', soalPaketId);\n\n\t\tif (!error) {\n\t\t\tconst soalList = [];\n\t\t\tawait Promise.all(\n\t\t\t\tdata.map(async (row, idx) => {\n\n\t\t\t\t\tconst { data: jawaban, error: jawabanErr } = await supabase\n\t\t\t\t\t\t.from('soal_jawaban')\n\t\t\t\t\t\t.select('id, label, is_right')\n\t\t\t\t\t\t.eq('soal_id', row.id)\n\n\t\t\t\t\tif (!jawabanErr) {\n\t\t\t\t\t\tlet jawabanList = [];\n\t\t\t\t\t\tjawaban.map((rowchild, childidx) => {\n\t\t\t\t\t\t\tjawabanList.push({ idx: childidx, label: rowchild.label, is_right: rowchild.is_right })\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsoalList[idx] = {\n\t\t\t\t\t\t\tidx: idx, label: row.label, 'jawaban': { ...jawabanList }\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t)\n\t\t\tsetSoal(soalList);\n\t\t}\n\t}\n\n\tconst cekSoal = () => {\n\t\tconsole.log('ini soal', soal);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Appbar.Header>\n\t\t\t\t<Appbar.BackAction onPress={() => navigation.goBack()} />\n\t\t\t\t<Appbar.Content title=\"Akademi Bank Sampah\" />\n\t\t\t</Appbar.Header>\n\n\t\t\t<ScrollView>\n\t\t\t\t<Card style={{ margin: 10 }}>\n\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t<Text variant=\"titleMedium\">Kerjakan Soal</Text>\n\t\t\t\t\t\t<Text>Soal terdiri 50 Pilihan Ganda, kerjakan seluruh soal dengan teliti.</Text>\n\t\t\t\t\t</Card.Content>\n\t\t\t\t</Card>\n\t\t\t</ScrollView>\n\n\t\t\t{/* <Button mode=\"contained\" onPress={() => navigation.navigate('UjianScreen', { id: id, soalPaketId: soalPaketId })} style={{ margin: 10 }}>Mulai Ujian</Button> */}\n\t\t\t<Button mode=\"contained\" onPress={() => cekSoal()} style={{ margin: 10 }}>Mulai Ujian</Button>\n\t\t</>\n\t);\n}\n\nexport default withTheme(PreTestScreen);"],"mappings":"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"},"metadata":{},"sourceType":"module"}