{"ast":null,"code":"import { nanoid } from 'nanoid/non-secure';\nexport default function createMemoryHistory() {\n  var index = 0;\n  var items = [];\n  var pending = [];\n\n  var interrupt = function interrupt() {\n    pending.forEach(function (it) {\n      var cb = it.cb;\n\n      it.cb = function () {\n        return cb(true);\n      };\n    });\n  };\n\n  var history = {\n    get index() {\n      var _window$history$state;\n\n      var id = (_window$history$state = window.history.state) === null || _window$history$state === void 0 ? void 0 : _window$history$state.id;\n\n      if (id) {\n        var _index = items.findIndex(function (item) {\n          return item.id === id;\n        });\n\n        return _index > -1 ? _index : 0;\n      }\n\n      return 0;\n    },\n\n    get: function get(index) {\n      return items[index];\n    },\n    backIndex: function backIndex(_ref) {\n      var path = _ref.path;\n\n      for (var i = index - 1; i >= 0; i--) {\n        var item = items[i];\n\n        if (item.path === path) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n    push: function push(_ref2) {\n      var path = _ref2.path,\n          state = _ref2.state;\n      interrupt();\n      var id = nanoid();\n      items = items.slice(0, index + 1);\n      items.push({\n        path: path,\n        state: state,\n        id: id\n      });\n      index = items.length - 1;\n      window.history.pushState({\n        id: id\n      }, '', path);\n    },\n    replace: function replace(_ref3) {\n      var _ref4;\n\n      var _window$history$state2;\n\n      var path = _ref3.path,\n          state = _ref3.state;\n      interrupt();\n      var id = (_ref4 = (_window$history$state2 = window.history.state) === null || _window$history$state2 === void 0 ? void 0 : _window$history$state2.id) != null ? _ref4 : nanoid();\n      var pathWithHash = path;\n\n      if (!items.length || items.findIndex(function (item) {\n        return item.id === id;\n      }) < 0) {\n        pathWithHash = pathWithHash + location.hash;\n        items = [{\n          path: pathWithHash,\n          state: state,\n          id: id\n        }];\n        index = 0;\n      } else {\n        if (items[index].path === path) {\n          pathWithHash = pathWithHash + location.hash;\n        }\n\n        items[index] = {\n          path: path,\n          state: state,\n          id: id\n        };\n      }\n\n      window.history.replaceState({\n        id: id\n      }, '', pathWithHash);\n    },\n    go: function go(n) {\n      interrupt();\n      var nextIndex = index + n;\n      var lastItemIndex = items.length - 1;\n\n      if (n < 0 && !items[nextIndex]) {\n        n = -index;\n        index = 0;\n      } else if (n > 0 && nextIndex > lastItemIndex) {\n        n = lastItemIndex - index;\n        index = lastItemIndex;\n      } else {\n        index = nextIndex;\n      }\n\n      if (n === 0) {\n        return;\n      }\n\n      return new Promise(function (resolve, reject) {\n        var done = function done(interrupted) {\n          clearTimeout(timer);\n\n          if (interrupted) {\n            reject(new Error('History was changed during navigation.'));\n            return;\n          }\n\n          var title = window.document.title;\n          window.document.title = '';\n          window.document.title = title;\n          resolve();\n        };\n\n        pending.push({\n          ref: done,\n          cb: done\n        });\n        var timer = setTimeout(function () {\n          var index = pending.findIndex(function (it) {\n            return it.ref === done;\n          });\n\n          if (index > -1) {\n            pending[index].cb();\n            pending.splice(index, 1);\n          }\n        }, 100);\n\n        var onPopState = function onPopState() {\n          var _window$history$state3;\n\n          var id = (_window$history$state3 = window.history.state) === null || _window$history$state3 === void 0 ? void 0 : _window$history$state3.id;\n          var currentIndex = items.findIndex(function (item) {\n            return item.id === id;\n          });\n          index = Math.max(currentIndex, 0);\n          var last = pending.pop();\n          window.removeEventListener('popstate', onPopState);\n          last === null || last === void 0 ? void 0 : last.cb();\n        };\n\n        window.addEventListener('popstate', onPopState);\n        window.history.go(n);\n      });\n    },\n    listen: function listen(listener) {\n      var onPopState = function onPopState() {\n        if (pending.length) {\n          return;\n        }\n\n        listener();\n      };\n\n      window.addEventListener('popstate', onPopState);\n      return function () {\n        return window.removeEventListener('popstate', onPopState);\n      };\n    }\n  };\n  return history;\n}","map":{"version":3,"mappings":"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","names":["nanoid","createMemoryHistory","index","items","pending","interrupt","forEach","it","cb","history","id","window","state","_window$history$state","findIndex","item","get","backIndex","_ref","path","i","push","_ref2","slice","length","pushState","replace","_ref3","_window$history$state2","pathWithHash","location","hash","replaceState","go","n","nextIndex","lastItemIndex","Promise","resolve","reject","done","interrupted","clearTimeout","timer","Error","title","document","ref","setTimeout","splice","onPopState","_window$history$state3","currentIndex","Math","max","last","pop","removeEventListener","addEventListener","listen","listener"],"sourceRoot":"../../src","sources":["createMemoryHistory.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}